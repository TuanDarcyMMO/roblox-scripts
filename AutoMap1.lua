-- ==========================================================
--        SCRIPT AUTO-FARM (GUI LOG NH·∫∏)
--        Author: Darcy & Gemini
--        Last Updated: 18/10/2025
-- ==========================================================

-- //////////////// KI·ªÇM TRA V√Ä D·ª™NG SCRIPT C≈® ////////////////
if _G.DarcyFarmControl and typeof(_G.DarcyFarmControl) == "table" then
    _G.DarcyFarmControl.State = "Stopped"
    if _G.DarcyFarmControl.GUI and _G.DarcyFarmControl.GUI.Parent then _G.DarcyFarmControl.GUI:Destroy() end
    wait(0.5)
end
_G.DarcyFarmControl = { State = "Running", MaxLogs = 15 } -- Gi·∫£m s·ªë log t·ªëi ƒëa cho g·ªçn
-------------------------------------------------------------

-- //////////////// KH·ªûI T·∫†O GUI LOG ////////////////
local controlGui = Instance.new("ScreenGui")
controlGui.Name = "DarcyFarmLogGUI"
controlGui.Parent = game:GetService("Players").LocalPlayer.PlayerGui
_G.DarcyFarmControl.GUI = controlGui

local mainFrame = Instance.new("Frame", controlGui)
mainFrame.Size = UDim2.new(0, 250, 0, 150) -- K√≠ch th∆∞·ªõc nh·ªè g·ªçn h∆°n
mainFrame.Position = UDim2.new(0, 10, 0.5, -75) -- ƒê·∫∑t ·ªü g√≥c tr√°i gi·ªØa m√†n h√¨nh
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
mainFrame.BackgroundTransparency = 0.2
mainFrame.BorderSizePixel = 0
local corner = Instance.new("UICorner", mainFrame); corner.CornerRadius = UDim.new(0, 6)

local titleLabel = Instance.new("TextLabel", mainFrame)
titleLabel.Size = UDim2.new(1, 0, 0, 20)
titleLabel.Text = "üöÄ Darcy Farm Status"
titleLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
titleLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
titleLabel.BackgroundTransparency = 0.1
titleLabel.Font = Enum.Font.SourceSansSemibold
titleLabel.TextSize = 14
local titleCorner = Instance.new("UICorner", titleLabel); titleCorner.CornerRadius = UDim.new(0, 6)

local logFrame = Instance.new("ScrollingFrame", mainFrame)
logFrame.Size = UDim2.new(1, -10, 1, -25) -- Padding nh·ªè
logFrame.Position = UDim2.new(0, 5, 0, 20)
logFrame.BackgroundTransparency = 1
logFrame.BorderSizePixel = 0
logFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
logFrame.ScrollBarThickness = 3

local logLayout = Instance.new("UIListLayout", logFrame)
logLayout.SortOrder = Enum.SortOrder.LayoutOrder
logLayout.Padding = UDim.new(0, 1)
-------------------------------------------------------------

-- //////////////// H√ÄM IN LOG RA GUI ////////////////
function customLog(message)
    print(message) -- V·∫´n in ra F9 ƒë·ªÉ debug
    if not (_G.DarcyFarmControl.GUI and _G.DarcyFarmControl.GUI.Parent) then return end -- Ki·ªÉm tra GUI c√≤n t·ªìn t·∫°i kh√¥ng
    local newLog = Instance.new("TextLabel", logFrame); newLog.Text = "  " .. message; newLog.TextColor3 = Color3.fromRGB(220, 220, 220); newLog.Font = Enum.Font.SourceSans; newLog.TextSize = 12; newLog.TextXAlignment = Enum.TextXAlignment.Left; newLog.BackgroundTransparency = 1; newLog.Size = UDim2.new(1, 0, 0, 16); newLog.LayoutOrder = -tick()
    if #logFrame:GetChildren() > _G.DarcyFarmControl.MaxLogs + 1 then local oldestLog; local maxLayoutOrder = -math.huge; for _, child in pairs(logFrame:GetChildren()) do if child:IsA("TextLabel") and child.LayoutOrder > maxLayoutOrder then maxLayoutOrder = child.LayoutOrder; oldestLog = child end end; if oldestLog then oldestLog:Destroy() end end
    logFrame.CanvasPosition = Vector2.new(0,0) -- T·ª± cu·ªôn l√™n ƒë·∫ßu
end
-------------------------------------------------------------

-- //////////////// KH·ªûI T·∫†O TR·∫†NG TH√ÅI V√Ä C√ÅC H√ÄM KH√ÅC ////////////////
local farmState = { LobbyAction = "NeedsToCreate", InMatch = false }
local function waitgameisloaded() customLog("‚è≥ Ch·ªù game t·∫£i..."); if not game:IsLoaded() then game.Loaded:Wait() end; wait(3); customLog("‚úÖ Game ƒë√£ t·∫£i!") end
local function handleDialogues() customLog("üîé Ki·ªÉm tra h·ªôi tho·∫°i..."); local playerGui=game:GetService("Players").LocalPlayer.PlayerGui; local DialogueEvent=game:GetService("ReplicatedStorage").Networking.State.DialogueEvent; local dialogueFound=false; local okayButton=playerGui:FindFirstChild("Dialogue",true) and playerGui.Dialogue:FindFirstChild("Dialogue",true) and playerGui.Dialogue.Dialogue:FindFirstChild("Options",true) and playerGui.Dialogue.Dialogue.Options:FindFirstChild("Option1",true) and playerGui.Dialogue.Dialogue.Options.Option1:FindFirstChild("Okay!"); if okayButton and okayButton.Parent then dialogueFound=true; customLog("‚úÖ X·ª≠ l√Ω 'Okay!'..."); pcall(function() DialogueEvent:FireServer("Interact", {"StarterUnitDialogue", 1, "Okay!"}) end); wait(8) end; local yeahButton=playerGui:FindFirstChild("Dialogue",true) and playerGui.Dialogue:FindFirstChild("Dialogue",true) and playerGui.Dialogue.Dialogue:FindFirstChild("Options",true) and playerGui.Dialogue.Dialogue.Options:FindFirstChild("Option1",true) and playerGui.Dialogue.Dialogue.Options.Option1:FindFirstChild("Yeah!"); if yeahButton and yeahButton.Parent then dialogueFound=true; customLog("‚úÖ X·ª≠ l√Ω 'Yeah!'..."); pcall(function() DialogueEvent:FireServer("Interact", {"StarterUnitDialogue", 2, "Yes!"}) end) else if dialogueFound then warn("‚ö†Ô∏è Kh√¥ng th·∫•y h·ªôi tho·∫°i 'Yeah!'.") end end; return dialogueFound end
local function claimNewPlayerReward() customLog("üîé Ki·ªÉm tra ph·∫ßn th∆∞·ªüng..."); pcall(function() local dayIndicatorPath=game:GetService("Players").LocalPlayer.PlayerGui.NewPlayers.Holder.TopRewards.SmallTemplate.SmallTemplate.Main.Day; if dayIndicatorPath then customLog("üéÅ Nh·∫≠n th∆∞·ªüng ng√†y 1..."); local remote=game:GetService("ReplicatedStorage").Networking.NewPlayerRewardsEvent; remote:FireServer("Claim", 1); customLog("‚úÖ ƒê√£ nh·∫≠n."); wait(3) end end) end
local function selectStartingUnit_Roku() customLog("üìå Ch·ªçn unit 'Roku'..."); pcall(function() local remote=game:GetService("ReplicatedStorage").Networking.Units.UnitSelectionEvent; remote:FireServer("Select", "Roku"); customLog("‚úÖ ƒê√£ ch·ªçn.") end) end
local function checkAndEquipUnits() customLog("üõ°Ô∏è Trang b·ªã units..."); local success, err = pcall(function() local EquipEvent = game:GetService("ReplicatedStorage").Networking.Units.EquipEvent; local ROKU_EQUIP_ID = "f7d74383-6d36-4dfc-99f5-17a8455b1db6"; local ACKER_EQUIP_ID = "12c3a768-6677-4436-8ab2-5fcd895c3cd1"; EquipEvent:FireServer("Equip", ROKU_EQUIP_ID); customLog("‚¨ÜÔ∏è G·ª≠i equip Roku."); wait(0.7); EquipEvent:FireServer("Equip", ACKER_EQUIP_ID); customLog("‚¨ÜÔ∏è G·ª≠i equip Acker."); wait(0.7); customLog("‚úÖ Xong trang b·ªã.") end); if not success then warn("‚ö†Ô∏è L·ªói trang b·ªã:", err) end end

local LOBBY_PLACE_ID = 16146832113; local MATCH_PLACE_ID = 16277809958
customLog("üü¢ Script ƒë√£ k√≠ch ho·∫°t!")
waitgameisloaded()

-- ##################################################################
-- #                     V√íNG L·∫∂P CH√çNH C·ª¶A SCRIPT                  #
-- ##################################################################
while _G.DarcyFarmControl.State == "Running" do -- Thay ƒë·ªïi ƒëi·ªÅu ki·ªán d·ª´ng
    local currentPlaceId = game.PlaceId
    if currentPlaceId == LOBBY_PLACE_ID then
        farmState.InMatch = false
        if farmState.LobbyAction == "NeedsToCreate" then
            farmState.LobbyAction = "WaitingForTeleport"; customLog("üè† ƒêang ·ªü Lobby...")
            local isNewPlayer = handleDialogues()
            if isNewPlayer then
                customLog("‚ú® Lu·ªìng ng∆∞·ªùi ch∆°i m·ªõi...")
                customLog("‚è≥ Ch·ªù 5s..."); wait(5); selectStartingUnit_Roku()
                customLog("‚è≥ Ch·ªù 5s..."); wait(5); claimNewPlayerReward()
                checkAndEquipUnits(); customLog("‚è≥ Ch·ªù 5s..."); wait(5)
            else
                customLog("üîÑ Ng∆∞·ªùi ch∆°i c≈©."); checkAndEquipUnits(); wait(2)
            end
            customLog("‚û°Ô∏è T·∫°o tr·∫≠n..."); pcall(function() local lobbyEvent = game:GetService("ReplicatedStorage").Networking.LobbyEvent; local addMatchArgs = { [1] = "AddMatch", [2] = { ["Difficulty"] = "Normal", ["Act"] = "Act1", ["StageType"] = "Story", ["Stage"] = "Stage1", ["FriendsOnly"] = false } }; lobbyEvent:FireServer(unpack(addMatchArgs)); customLog("‚ûï ƒê√£ t·∫°o tr·∫≠n."); wait(3); lobbyEvent:FireServer("StartMatch"); customLog("üöÄ ƒê√£ b·∫Øt ƒë·∫ßu tr·∫≠n!") end)
        end
    elseif currentPlaceId == MATCH_PLACE_ID and not farmState.InMatch then
        farmState.InMatch = true; customLog("‚öîÔ∏è ƒê√£ v√†o tr·∫≠n.")
        local hasCompletedFirstRun = false
        customLog("‚è≥ Ch·ªù 20 gi√¢y..."); wait(20)
        
        while currentPlaceId == MATCH_PLACE_ID and _G.DarcyFarmControl.State == "Running" do
            customLog("üî• B·∫Øt ƒë·∫ßu l∆∞·ª£t ch∆°i m·ªõi...")
            spawn(function() pcall(function() local skipWaveGui = game.Players.LocalPlayer.PlayerGui:WaitForChild("SkipWave", 45); if skipWaveGui and skipWaveGui.Parent and skipWaveGui:FindFirstChild("Holder") and skipWaveGui.Holder:FindFirstChild("Yes") then game:GetService("ReplicatedStorage").Networking.SkipWaveEvent:FireServer("Skip") end end) end)
            customLog("‚è≥ Ch·ªù 3 gi√¢y..."); wait(3)
            do -- Kh·ªëi logic ƒë·∫∑t v√† n√¢ng c·∫•p unit
                local unitState = { isRokuPlaced = false, isAckerPlaced = false, ackerUpgradeLevel = 0 }; local ACKER_INSTANCE = nil; local ROKU_COST = 400; local ACKER_COST = 1000; local ACKER_UPGRADES = { [1] = 2400, [2] = 3600, [3] = 5200 }; local ROKU_POSITION = Vector3.new(431.536, 4.840, -358.474); local ACKER_POSITION = Vector3.new(445.913, 3.529, -345.790); local UnitEvent = game:GetService("ReplicatedStorage").Networking.UnitEvent
                local function getCurrentMoney() local moneyAmount=0; pcall(function() local lbl=game:GetService("Players").LocalPlayer.PlayerGui.Hotbar.Main.Yen; local str=string.gsub(lbl.Text,"[^%d]",""); moneyAmount=tonumber(str) or 0 end); return moneyAmount end
                local function getUnitInstanceAtPosition(position) local unitsFolder = workspace:FindFirstChild("Units"); if not unitsFolder then return nil end; for _, unit in ipairs(unitsFolder:GetChildren()) do local unitRoot = unit:FindFirstChild("HumanoidRootPart") or unit.PrimaryPart; if unitRoot and (unitRoot.Position - position).Magnitude < 1 then customLog("‚úÖ 'SƒÉn' ID Acker: "..unit.Name); return unit end end; return nil end
                while unitState.ackerUpgradeLevel < 3 and _G.DarcyFarmControl.State == "Running" and currentPlaceId == MATCH_PLACE_ID do
                    local currentMoney = getCurrentMoney()
                    if not unitState.isRokuPlaced and currentMoney >= ROKU_COST then customLog(string.format("üí∞ (%d/%d) ƒê·∫∑t Roku...", currentMoney, ROKU_COST)); UnitEvent:FireServer("Render", {"Roku", 41, ROKU_POSITION, 0}); unitState.isRokuPlaced = true
                    elseif unitState.isRokuPlaced and not unitState.isAckerPlaced and currentMoney >= ACKER_COST then customLog(string.format("üí∞ (%d/%d) ƒê·∫∑t Acker...", currentMoney, ACKER_COST)); UnitEvent:FireServer("Render", {"Ackers", 241, ACKER_POSITION, 0}); unitState.isAckerPlaced = true; wait(1.5); ACKER_INSTANCE = getUnitInstanceAtPosition(ACKER_POSITION)
                    elseif ACKER_INSTANCE and unitState.ackerUpgradeLevel < 3 then
                        local nextUpgradeLevel = unitState.ackerUpgradeLevel + 1; local upgradeCost = ACKER_UPGRADES[nextUpgradeLevel]
                        if currentMoney >= upgradeCost then customLog(string.format("üí∞ (%d/%d) N√¢ng c·∫•p Acker #%d...", currentMoney, upgradeCost, nextUpgradeLevel)); UnitEvent:FireServer("Upgrade", ACKER_INSTANCE.Name); unitState.ackerUpgradeLevel = nextUpgradeLevel end
                    end; wait(0.5); currentPlaceId = game.PlaceId
                end; customLog("‚úÖ Xong ƒë·∫∑t/n√¢ng c·∫•p.")
            end
            
            if not hasCompletedFirstRun then
                customLog("‚è≥ (L∆∞·ª£t ƒë·∫ßu) Ch·ªù RewardsDisplay...")
                local rewardsDisplay = game.Players.LocalPlayer.PlayerGui:WaitForChild("RewardsDisplay", 1200)
                if rewardsDisplay and rewardsDisplay.Parent and _G.DarcyFarmControl.State == "Running" then customLog("üèÜ G·ª≠i Retry..."); wait(1); pcall(function() game:GetService("ReplicatedStorage").Networking.EndScreen.VoteEvent:FireServer("Retry"); customLog("üîÑ ƒê√£ Retry!") end); hasCompletedFirstRun = true; wait(5)
                else customLog("‚ùå Kh√¥ng th·∫•y m√†n h√¨nh th∆∞·ªüng."); break end
            else
                customLog("‚è≥ (L∆∞·ª£t sau) Ch·ªù EndScreen...")
                local endScreenGui; while _G.DarcyFarmControl.State == "Running" and not (endScreenGui and endScreenGui.Parent) do endScreenGui = game.Players.LocalPlayer.PlayerGui:FindFirstChild("EndScreen"); wait(0.5) end
                if _G.DarcyFarmControl.State == "Running" and endScreenGui then
                    local holder = endScreenGui:FindFirstChild("Holder"); if holder and holder:FindFirstChild("Buttons") and holder.Buttons:FindFirstChild("Retry") then customLog("‚úÖ Th·∫•y n√∫t Retry! G·ª≠i Retry..."); wait(3); pcall(function() game:GetService("ReplicatedStorage").Networking.EndScreen.VoteEvent:FireServer("Retry"); customLog("üîÑ ƒê√£ Retry!") end); wait(5)
                    else customLog("‚ùå Kh√¥ng th·∫•y n√∫t Retry."); break end
                else customLog("‚ùå Kh√¥ng th·∫•y EndScreen."); break end
            end
            currentPlaceId = game.PlaceId
        end
        customLog("üö™ Tho√°t v√≤ng l·∫∑p farm n·ªôi b·ªô."); farmState.LobbyAction = "NeedsToCreate"
    end
    wait(2)
end
customLog("‚èπÔ∏è Script ƒë√£ d·ª´ng.")
if _G.DarcyFarmControl.GUI and _G.DarcyFarmControl.GUI.Parent then _G.DarcyFarmControl.GUI:Destroy() end
