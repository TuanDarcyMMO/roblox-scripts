-- ==========================================================
--        SCRIPT AUTO-FARM "T√†ng H√¨nh" (FINAL - CHU·∫®N SETTING CHECK)
--        Author: Darcy & Gemini
--        Last Updated: 18/10/2025
-- ==========================================================

-- //////////////// KI·ªÇM TRA V√Ä D·ª™NG SCRIPT C≈® ////////////////
if _G.DarcyFarmIsRunning then print("üî¥ D·ª´ng script c≈©..."); _G.DarcyFarmIsRunning = false; wait(1) end
_G.DarcyFarmIsRunning = true
-------------------------------------------------------------

-- //////////////// KH·ªûI T·∫†O TR·∫†NG TH√ÅI V√Ä C√ÅC H√ÄM ////////////////
-- Tr·∫°ng th√°i Lobby: NeedsCheck, Rejoining, NeedsPostRejoinSetup, NeedsMatchStart, WaitingForTeleport
local farmState = { LobbyAction = "NeedsCheck", InMatch = false }
local function waitgameisloaded() print("‚è≥ Ch·ªù game t·∫£i..."); if not game:IsLoaded() then game.Loaded:Wait() end; wait(3); print("‚úÖ Game ƒë√£ t·∫£i!") end
local function claimNewPlayerReward() print("üîé Ki·ªÉm tra ph·∫ßn th∆∞·ªüng..."); pcall(function() local dayIndicatorPath=game:GetService("Players").LocalPlayer.PlayerGui.NewPlayers.Holder.TopRewards.SmallTemplate.SmallTemplate.Main.Day; if dayIndicatorPath then print("üéÅ Nh·∫≠n th∆∞·ªüng ng√†y 1..."); local remote=game:GetService("ReplicatedStorage").Networking.NewPlayerRewardsEvent; remote:FireServer("Claim", 1); print("‚úÖ ƒê√£ nh·∫≠n.") end end) end
local function selectStartingUnit_Roku() print("üìå Ch·ªçn unit 'Roku'..."); pcall(function() local remote=game:GetService("ReplicatedStorage").Networking.Units.UnitSelectionEvent; remote:FireServer("Select", "Roku"); print("‚úÖ ƒê√£ ch·ªçn.") end) end
local function getEquipIdByName(unitDisplayName) print("   üîé T√¨m ID:", unitDisplayName); local equipId=nil; local s,e=pcall(function() local f=game:GetService("Players").LocalPlayer.PlayerGui.Windows.Units.Holder.Main.Units; for _,u in ipairs(f:GetChildren()) do if u:IsA("Frame") and string.match(u.Name,"^%x%x%x%x%x%x%x%x%-%x%x%x%x%-") then local l=u:FindFirstChild("Holder",true) and u.Holder:FindFirstChild("Main",true) and u.Holder.Main:FindFirstChild("UnitName",true); if l and l:IsA("TextLabel") then local n=string.match(l.Text,"^[^(]+"); if n and string.lower(string.gsub(n,"%s+$",""))==string.lower(unitDisplayName) then equipId=u.Name; print("      ‚úÖ ID:",equipId); break end end end end end); if not s then warn("L·ªói qu√©t GUI:",e) elseif not equipId then warn("‚ö†Ô∏è Kh√¥ng th·∫•y ID.") end; return equipId end
local function checkAndEquipUnits() print("üõ°Ô∏è Trang b·ªã units..."); local s,e=pcall(function() local E=game:GetService("ReplicatedStorage").Networking.Units.EquipEvent; local rID=getEquipIdByName("Roku"); local aID=getEquipIdByName("Ackers"); if rID then local args={[1]="Equip",[2]=rID}; E:FireServer(unpack(args)); print("‚¨ÜÔ∏è G·ª≠i equip Roku."); wait(2) else print("‚ùå Kh√¥ng th·∫•y ID Roku.") end; if aID then local args={[1]="Equip",[2]=aID}; E:FireServer(unpack(args)); print("‚¨ÜÔ∏è G·ª≠i equip Acker."); wait(1) else print("‚ùå Kh√¥ng th·∫•y ID Acker.") end; print("‚úÖ Xong trang b·ªã.") end); if not s then warn("‚ö†Ô∏è L·ªói trang b·ªã:",e) end end
local function handleDialogues() print("üîé Ki·ªÉm tra h·ªôi tho·∫°i..."); local playerGui=game:GetService("Players").LocalPlayer.PlayerGui; local DialogueEvent=game:GetService("ReplicatedStorage").Networking.State.DialogueEvent; local dialogueFound=false; local okayButton=playerGui:FindFirstChild("Dialogue",true) and playerGui.Dialogue:FindFirstChild("Dialogue",true) and playerGui.Dialogue.Dialogue:FindFirstChild("Options",true) and playerGui.Dialogue.Dialogue.Options:FindFirstChild("Option1",true) and playerGui.Dialogue.Dialogue.Options.Option1:FindFirstChild("Okay!"); if okayButton and okayButton.Parent then dialogueFound=true; print("‚úÖ X·ª≠ l√Ω 'Okay!'..."); pcall(function() DialogueEvent:FireServer("Interact", {"StarterUnitDialogue", 1, "Okay!"}) end); wait(8) end; local yeahButton=playerGui:FindFirstChild("Dialogue",true) and playerGui.Dialogue:FindFirstChild("Dialogue",true) and playerGui.Dialogue.Dialogue:FindFirstChild("Options",true) and playerGui.Dialogue.Dialogue.Options:FindFirstChild("Option1",true) and playerGui.Dialogue.Dialogue.Options.Option1:FindFirstChild("Yeah!"); if yeahButton and yeahButton.Parent then dialogueFound=true; print("‚úÖ X·ª≠ l√Ω 'Yeah!'..."); pcall(function() DialogueEvent:FireServer("Interact", {"StarterUnitDialogue", 2, "Yes!"}) end); wait(1) else if okayButton and okayButton.Parent then warn("‚ö†Ô∏è Kh√¥ng th·∫•y h·ªôi tho·∫°i 'Yeah!'.") end end; return dialogueFound end
local function rejoinCurrentServer() print("üîÑ Rejoining server..."); pcall(function() local TS=game:GetService("TeleportService"); local Plrs=game:GetService("Players"); TS:TeleportToPlaceInstance(game.PlaceId, game.JobId, Plrs.LocalPlayer) end) end

-- <<< H√ÄM B·∫¨T SETTING (CHECK M√ÄU UIGRADIENT) >>>
local function enableAllSettings()
    print("-----------------------------------"); print("‚öôÔ∏è Ki·ªÉm tra c√†i ƒë·∫∑t...")
    local success, err = pcall(function()
        -- >> NH·ªö C·∫¨P NH·∫¨T ƒê∆Ø·ªúNG D·∫™N N√ÄY << --
        local gameplayFolder = game:GetService("Players").LocalPlayer.PlayerGui.Windows.Settings.Holder.Main.ScrollingFrame.Gameplay

        local settingsToEnable = {
            ["Auto Skip Waves"] = "AutoSkipWaves", ["Select Unit on Placement"] = "SelectUnitOnPlacement",
            ["Show Multipliers on Hover"] = "ShowMultipliersOnHover", ["Disable Match End Rewards View"] = "DisableMatchEndRewardsView",
            ["Show Max Range on Placement"] = "ShowMaxRangeOnPlacement", ["Low Detail Mode"] = "LowDetailMode",
            ["Disable Camera Shake"] = "DisableCameraShake", ["Disable Depth of Field"] = "DisableDepthOfField",
            ["Hide Familiars"] = "HideFamiliars"
        }
        local SettingsEvent = game:GetService("ReplicatedStorage").Networking.Settings.SettingsEvent

        for settingFrameName, remoteName in pairs(settingsToEnable) do
            local settingFrame = gameplayFolder:FindFirstChild(settingFrameName)
            if settingFrame then
                -- T√¨m UIGradient theo ƒë∆∞·ªùng d·∫´n b·∫°n cung c·∫•p
                local uiGradient = settingFrame:FindFirstChild("Slider", true) and settingFrame.Slider:FindFirstChild("Ball", true) and settingFrame.Slider.Ball:FindFirstChild("UIGradient")
                
                if uiGradient and uiGradient:IsA("UIGradient") then
                    local currentSequence = uiGradient.Color
                    if #currentSequence.Keypoints > 0 then
                        local firstColor = currentSequence.Keypoints[1].Value
                        -- Ki·ªÉm tra m√†u: Xanh (B·∫≠t) khi G > R v√† G > 0.5
                        if not (firstColor.G > firstColor.R and firstColor.G > 0.5) then
                            print("‚ùå '"..settingFrameName.."' ƒëang T·∫ÆT. B·∫≠t...")
                            SettingsEvent:FireServer("Toggle", remoteName)
                        else
                            print("‚úÖ '"..settingFrameName.."' ƒë√£ B·∫¨T.")
                        end
                    else warn("‚ö†Ô∏è UIGradient c·ªßa '"..settingFrameName.."' kh√¥ng c√≥ keypoints.") end
                else warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y UIGradient cho '"..settingFrameName.."' theo ƒë∆∞·ªùng d·∫´n.") end
            else warn("‚ö†Ô∏è Kh√¥ng th·∫•y Frame c√†i ƒë·∫∑t: '" .. settingFrameName .. "'") end
            wait(0.2)
        end
    end); if not success then warn("‚ÄºÔ∏è L·ªói b·∫≠t c√†i ƒë·∫∑t:", err) end; print("‚öôÔ∏è Xong ki·ªÉm tra c√†i ƒë·∫∑t.")
end


local LOBBY_PLACE_ID = 16146832113; local MATCH_PLACE_ID = 16277809958
print("üü¢ Script 'T√†ng H√¨nh' ƒë√£ k√≠ch ho·∫°t!"); waitgameisloaded()

-- ##################################################################
-- #                     V√íNG L·∫∂P CH√çNH C·ª¶A SCRIPT                  #
-- ##################################################################
while _G.DarcyFarmIsRunning do
    local currentPlaceId = game.PlaceId
    if currentPlaceId == LOBBY_PLACE_ID then
        farmState.InMatch = false
        if farmState.LobbyAction == "NeedsCheck" then
            farmState.LobbyAction = "WaitingForTeleport"; print("üè† ƒêang ·ªü Lobby...")
            local isNewPlayer = handleDialogues()
            if isNewPlayer then
                print("‚ú® Lu·ªìng ng∆∞·ªùi ch∆°i m·ªõi..."); selectStartingUnit_Roku(); farmState.LobbyAction = "Rejoining"; wait(2); rejoinCurrentServer(); wait(15)
            else
                print("üîÑ Ng∆∞·ªùi ch∆°i c≈©/sau rejoin."); farmState.LobbyAction = "NeedsPostRejoinSetup"
            end
        elseif farmState.LobbyAction == "NeedsPostRejoinSetup" then
            print("üîß Setup sau rejoin..."); claimNewPlayerReward(); wait(5); checkAndEquipUnits(); wait(5); farmState.LobbyAction = "NeedsMatchStart"
        elseif farmState.LobbyAction == "NeedsMatchStart" then
            print("‚û°Ô∏è T·∫°o tr·∫≠n..."); pcall(function() local lobbyEvent = game:GetService("ReplicatedStorage").Networking.LobbyEvent; local addMatchArgs = { [1] = "AddMatch", [2] = { ["Difficulty"] = "Normal", ["Act"] = "Act1", ["StageType"] = "Story", ["Stage"] = "Stage1", ["FriendsOnly"] = false } }; lobbyEvent:FireServer(unpack(addMatchArgs)); print("‚ûï ƒê√£ t·∫°o tr·∫≠n."); wait(3); lobbyEvent:FireServer("StartMatch"); print("üöÄ ƒê√£ b·∫Øt ƒë·∫ßu tr·∫≠n!") end); farmState.LobbyAction = "WaitingForTeleport"
        elseif farmState.LobbyAction == "WaitingForTeleport" then print("‚è≥ Ch·ªù d·ªãch chuy·ªÉn...")
        elseif farmState.LobbyAction == "Rejoining" then print("‚è≥ Rejoining..."); wait(5) end
    elseif currentPlaceId == MATCH_PLACE_ID then
        if not farmState.InMatch then
             farmState.InMatch = true; print("‚öîÔ∏è ƒê√£ v√†o tr·∫≠n. B·∫Øt ƒë·∫ßu V√íNG L·∫∂P FARM V√î H·∫†N.")
             enableAllSettings() -- G·ªçi h√†m b·∫≠t setting ·ªü ƒë√¢y
             local hasCompletedFirstRun = false
             print("‚è≥ Ch·ªù 20 gi√¢y..."); wait(20)
        end
        while currentPlaceId == MATCH_PLACE_ID and _G.DarcyFarmIsRunning do
            print("-----------------------------------"); print("üî• B·∫Øt ƒë·∫ßu l∆∞·ª£t ch∆°i m·ªõi...")
            spawn(function() pcall(function() local skipWaveGui = game.Players.LocalPlayer.PlayerGui:WaitForChild("SkipWave", 45); if skipWaveGui and skipWaveGui.Parent and skipWaveGui:FindFirstChild("Holder") and skipWaveGui.Holder:FindFirstChild("Yes") then game:GetService("ReplicatedStorage").Networking.SkipWaveEvent:FireServer("Skip") end end) end)
            print("‚è≥ Ch·ªù 3 gi√¢y..."); wait(3)
            do -- Kh·ªëi logic ƒë·∫∑t v√† n√¢ng c·∫•p unit
                local unitState = { isRokuPlaced = false, isAckerPlaced = false, ackerUpgradeLevel = 0 }; local ACKER_INSTANCE = nil; local ROKU_COST = 400; local ACKER_COST = 1000; local ACKER_UPGRADES = { [1] = 2400, [2] = 3600, [3] = 5200 }; local ROKU_POSITION = Vector3.new(431.536, 4.840, -358.474); local ACKER_POSITION = Vector3.new(445.913, 3.529, -345.790); local UnitEvent = game:GetService("ReplicatedStorage").Networking.UnitEvent
                local function getCurrentMoney() local moneyAmount=0; pcall(function() local lbl=game:GetService("Players").LocalPlayer.PlayerGui.Hotbar.Main.Yen; local str=string.gsub(lbl.Text,"[^%d]",""); moneyAmount=tonumber(str) or 0 end); return moneyAmount end
                local function getUnitInstanceAtPosition(position) local unitsFolder = workspace:FindFirstChild("Units"); if not unitsFolder then return nil end; for _, unit in ipairs(unitsFolder:GetChildren()) do local unitRoot = unit:FindFirstChild("HumanoidRootPart") or unit.PrimaryPart; if unitRoot and (unitRoot.Position - position).Magnitude < 1 then print("‚úÖ 'SƒÉn' ID Acker: "..unit.Name); return unit end end; return nil end
                while unitState.ackerUpgradeLevel < 3 and _G.DarcyFarmIsRunning and currentPlaceId == MATCH_PLACE_ID do
                    local currentMoney = getCurrentMoney()
                    if not unitState.isRokuPlaced and currentMoney >= ROKU_COST then print(string.format("üí∞ (%d/%d) ƒê·∫∑t Roku...", currentMoney, ROKU_COST)); UnitEvent:FireServer("Render", {"Roku", 41, ROKU_POSITION, 0}); unitState.isRokuPlaced = true
                    elseif unitState.isRokuPlaced and not unitState.isAckerPlaced and currentMoney >= ACKER_COST then print(string.format("üí∞ (%d/%d) ƒê·∫∑t Acker...", currentMoney, ACKER_COST)); UnitEvent:FireServer("Render", {"Ackers", 241, ACKER_POSITION, 0}); unitState.isAckerPlaced = true; wait(1.5); ACKER_INSTANCE = getUnitInstanceAtPosition(ACKER_POSITION)
                    elseif ACKER_INSTANCE and unitState.ackerUpgradeLevel < 3 then
                        local nextUpgradeLevel = unitState.ackerUpgradeLevel + 1; local upgradeCost = ACKER_UPGRADES[nextUpgradeLevel]
                        if currentMoney >= upgradeCost then print(string.format("üí∞ (%d/%d) N√¢ng c·∫•p Acker #%d...", currentMoney, upgradeCost, nextUpgradeLevel)); UnitEvent:FireServer("Upgrade", ACKER_INSTANCE.Name); unitState.ackerUpgradeLevel = nextUpgradeLevel end
                    end; wait(0.5); currentPlaceId = game.PlaceId
                end; print("‚úÖ Xong ƒë·∫∑t/n√¢ng c·∫•p.")
            end
            if not hasCompletedFirstRun then print("‚è≥ (L∆∞·ª£t ƒë·∫ßu) Ch·ªù RewardsDisplay..."); local rewardsDisplay = game.Players.LocalPlayer.PlayerGui:WaitForChild("RewardsDisplay", 1200); if rewardsDisplay and rewardsDisplay.Parent and _G.DarcyFarmIsRunning then print("üèÜ G·ª≠i Retry..."); wait(1); pcall(function() game:GetService("ReplicatedStorage").Networking.EndScreen.VoteEvent:FireServer("Retry"); print("üîÑ ƒê√£ Retry!") end); hasCompletedFirstRun = true; wait(5) else print("‚ùå Kh√¥ng th·∫•y m√†n h√¨nh th∆∞·ªüng."); break end
            else print("‚è≥ (L∆∞·ª£t sau) Ch·ªù EndScreen..."); local endScreenGui; while _G.DarcyFarmIsRunning and not (endScreenGui and endScreenGui.Parent) do endScreenGui = game.Players.LocalPlayer.PlayerGui:FindFirstChild("EndScreen"); wait(0.5) end; if _G.DarcyFarmIsRunning and endScreenGui then local holder = endScreenGui:FindFirstChild("Holder"); if holder and holder:FindFirstChild("Buttons") and holder.Buttons:FindFirstChild("Retry") then print("‚úÖ Th·∫•y n√∫t Retry! G·ª≠i Retry..."); wait(3); pcall(function() game:GetService("ReplicatedStorage").Networking.EndScreen.VoteEvent:FireServer("Retry"); print("üîÑ ƒê√£ Retry!") end); wait(5) else print("‚ùå Kh√¥ng th·∫•y n√∫t Retry."); break end else print("‚ùå Kh√¥ng th·∫•y EndScreen."); break end end
            currentPlaceId = game.PlaceId
        end
        print("üö™ Tho√°t v√≤ng l·∫∑p farm n·ªôi b·ªô."); farmState.LobbyAction = "NeedsCheck"
    end
    wait(2)
end
print("‚èπÔ∏è Script ƒë√£ d·ª´ng h·∫≥n theo l·ªánh.")
